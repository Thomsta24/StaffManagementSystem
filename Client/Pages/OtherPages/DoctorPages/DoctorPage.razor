<h3>DoctorPage</h3>

@code {
    private SfGrid<Doctor>? DefaultGrid;
    DoctorDialog? doctorDialog;
    Doctor Doctor = new();

    public List<Doctor> Doctors { get; set; } = new();

    protected async override Task OnInitalizedAsync()
    {
        await GetHealth();
        allState.Action += StateHasChanged;
    }

    private async Task GetHealth() => Doctors = await doctorService.GetAll(Constants.DoctorBaseUrl);

    void AddButtonClicked()
    {
        Doctor = new();
        OpenDialog();
    }

    void OpenDialog() => doctorDialog?.OpenDialog();

    private async Task HandleSaveOperationEvent(Doctor doctor)
    {
        var result = await doctorService.Update(doctor, Constants.DoctorBaseUrl);
        bool successCheck = await DisplayMessage(result.Flag, result.Message);
        if (successCheck)
        {
            Doctor = new();
            await GetHealth();
        }
    }

    private void EditClicked(Doctor doctor)
    {
        Doctor = doctor;
        OpenDialog();
    }

    private async Task DeleteClicked(Doctor doctor)
    {
        bool confirm = await dialogService.ConfirmAsync($"Are you sure you wanna delete this?", "Confirm Delete");
        if (!confirm) return;

        var response = await doctorService.DeleteById(doctor.EmployeeId, Constants.DoctorBaseUrl);
        var result = await DisplayMessage(response.Flag, response.Message);
        if (result)
            await GetHealth();
    }

    private async Task<bool> DisplayMessage(bool flag, string message)
    {
        if (flag)
        {
            await dialogService.AlertAsync(message, "Success Operation");
            return true;
        }
        else
        {
            await dialogService.AlertAsync(message, "Alert!");
            return false;
        }
    }

    public void Dispose() => allState.Action -= StateHasChanged;
}
